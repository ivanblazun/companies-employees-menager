{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ivanb\\\\OneDrive\\\\Radna povr\\u0161ina\\\\practice\\\\express-login-boilerplate\\\\front\\\\src\\\\tabs\\\\companies\\\\CompaniesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Comps\n\nimport CompaniItem from './CompaniItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CompaniesList = () => {\n  _s();\n\n  const {\n    companies,\n    setCompanies\n  } = useState(null);\n  useEffect(() => {\n    callAllCompanies();\n  }, []);\n\n  const callAllCompanies = async () => {\n    let token = localStorage.getItem('token');\n    let config = {\n      headers: {\n        'auth-token': token\n      }\n    };\n    const res = await axios.get('http://localhost:5000/api/company', config);\n    const data = await res.data;\n    console.log(data);\n    setCompanies(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CompaniesList\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), !companies ? /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"List empty\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }, this) : companies.map(company => /*#__PURE__*/_jsxDEV(CompaniItem, {\n      keycom: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CompaniesList, \"iJKFX7OcoURo59F2GoGIDfa1BKQ=\");\n\n_c = CompaniesList;\nexport default CompaniesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompaniesList\");","map":{"version":3,"sources":["C:/Users/ivanb/OneDrive/Radna povrÅ¡ina/practice/express-login-boilerplate/front/src/tabs/companies/CompaniesList.js"],"names":["React","useState","useEffect","axios","CompaniItem","CompaniesList","companies","setCompanies","callAllCompanies","token","localStorage","getItem","config","headers","res","get","data","console","log","map","company"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AACA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE1B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA8BN,QAAQ,CAAC,IAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAEM,IAAAA,gBAAgB;AAAI,GAA7B,EAA+B,EAA/B,CAAT;;AAEA,QAAMA,gBAAgB,GAAG,YAAY;AACnC,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAZ;AACA,QAAIC,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACP,sBAAcJ;AADP;AADE,KAAb;AAKA,UAAMK,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,mCAAV,EAA+CH,MAA/C,CAAlB;AACA,UAAMI,IAAI,GAAG,MAAMF,GAAG,CAACE,IAAvB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAT,IAAAA,YAAY,CAACS,IAAD,CAAZ;AACD,GAZD;;AAcA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG,CAACV,SAAD,gBAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAb,GACCA,SAAS,CAACa,GAAV,CAAeC,OAAD,iBAAa,QAAC,WAAD;AAAa,MAAA,MAAM;AAAnB;AAAA;AAAA;AAAA;AAAA,YAA3B,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA3BD;;GAAMf,a;;KAAAA,a;AA6BN,eAAeA,aAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\n// Comps\r\nimport CompaniItem from './CompaniItem'\r\nconst CompaniesList = () => {\r\n\r\n  const { companies, setCompanies } = useState(null)\r\n\r\n  useEffect(() => { callAllCompanies() }, [])\r\n\r\n  const callAllCompanies = async () => {\r\n    let token = localStorage.getItem('token')\r\n    let config = {\r\n      headers: {\r\n        'auth-token': token\r\n      }\r\n    }\r\n    const res = await axios.get('http://localhost:5000/api/company', config)\r\n    const data = await res.data\r\n\r\n    console.log(data)\r\n    setCompanies(data)\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <h1>CompaniesList</h1>\r\n      {!companies ? <h3>List empty</h3> :\r\n        companies.map((company) => <CompaniItem keycom />)}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CompaniesList"]},"metadata":{},"sourceType":"module"}